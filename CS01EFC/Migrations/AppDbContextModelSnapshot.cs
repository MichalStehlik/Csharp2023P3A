// <auto-generated />
using System;
using CS01EFC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CS01EFC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CS01EFC.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            FirstName = "Keanu",
                            Gender = 1,
                            LastName = "Reeves",
                            WebAddress = "https://www.imdb.com/name/nm0000206/"
                        },
                        new
                        {
                            ArtistId = 2,
                            FirstName = "Timothée",
                            Gender = 1,
                            LastName = "Chalamet"
                        },
                        new
                        {
                            ArtistId = 3,
                            Gender = 2,
                            LastName = "Zendaya"
                        });
                });

            modelBuilder.Entity("CS01EFC.Models.ArtistMovie", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("ArtistId1")
                        .HasColumnType("int");

                    b.Property<int?>("MovieId1")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("ArtistId1");

                    b.HasIndex("MovieId1");

                    b.ToTable("ArtistMovies", (string)null);

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ArtistId = 3
                        });
                });

            modelBuilder.Entity("CS01EFC.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Sci-fi"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Životopis"
                        });
                });

            modelBuilder.Entity("CS01EFC.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<float?>("Duration")
                        .HasColumnType("real");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Duration = 3f,
                            GenreId = 1,
                            Name = "Dune"
                        },
                        new
                        {
                            MovieId = 2,
                            Duration = 2.5f,
                            GenreId = 3,
                            Name = "Oppenheimer"
                        });
                });

            modelBuilder.Entity("CS01EFC.Models.ArtistMovie", b =>
                {
                    b.HasOne("CS01EFC.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CS01EFC.Models.Artist", null)
                        .WithMany("Roles")
                        .HasForeignKey("ArtistId1");

                    b.HasOne("CS01EFC.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CS01EFC.Models.Movie", null)
                        .WithMany("Roles")
                        .HasForeignKey("MovieId1");

                    b.Navigation("Artist");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CS01EFC.Models.Movie", b =>
                {
                    b.HasOne("CS01EFC.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("CS01EFC.Models.Artist", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("CS01EFC.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("CS01EFC.Models.Movie", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
